name: "[Dispatch] Release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'enter version(x.y.z)'
        required: true
        default: '0.1.0'

env:
  VERSION: ${{ github.event.inputs.version }}

jobs:
  x86-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t sunshout/myplugin:amd64 --build-arg ARCH=amd64 .
          docker push sunshout/myplugin:amd64

  arm-build:
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t sunshout/myplugin:arm64 --build-arg ARCH=arm64v8 .
          docker push sunshout/myplugin:arm64

  manifest:
    needs: [x86-build, arm-build]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Merge Docker Manifest
        run: |
          docker manifest create sunshout/myplugin:${{ env.VERSION }} --amend sunshout/myplugin:amd64 --amend sunshout/myplugin:arm64
          docker manifest push sunshout/myplugin:${{ env.VERSION }}
